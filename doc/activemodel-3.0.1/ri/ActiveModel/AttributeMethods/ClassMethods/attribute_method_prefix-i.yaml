--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Declares a method available for all attributes with the given prefix. Uses <tt>method_missing</tt> and <tt>respond_to?</tt> to rewrite the method.
- !ruby/struct:SM::Flow::VERB 
  body: "  #{prefix}#{attr}(*args, &amp;block)\n"
- !ruby/struct:SM::Flow::P 
  body: to
- !ruby/struct:SM::Flow::VERB 
  body: "  #{prefix}attribute(#{attr}, *args, &amp;block)\n"
- !ruby/struct:SM::Flow::P 
  body: An instance method <tt>#{prefix}attribute</tt> must exist and accept at least the <tt>attr</tt> argument.
- !ruby/struct:SM::Flow::P 
  body: "For example:"
- !ruby/struct:SM::Flow::VERB 
  body: "  class Person\n\n    include ActiveModel::AttributeMethods\n    attr_accessor :name\n    attribute_method_prefix 'clear_'\n    define_attribute_methods [:name]\n\n    private\n\n    def clear_attribute(attr)\n      send(&quot;#{attr}=&quot;, nil)\n    end\n  end\n\n  person = Person.new\n  person.name = &quot;Bob&quot;\n  person.name          # =&gt; &quot;Bob&quot;\n  person.clear_name\n  person.name          # =&gt; nil\n"
full_name: ActiveModel::AttributeMethods::ClassMethods#attribute_method_prefix
is_singleton: false
name: attribute_method_prefix
params: (*prefixes)
visibility: public
