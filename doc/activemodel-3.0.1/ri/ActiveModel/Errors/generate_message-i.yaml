--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Translates an error message in its default scope (<tt>activemodel.errors.messages</tt>).
- !ruby/struct:SM::Flow::P 
  body: Error messages are first looked up in <tt>models.MODEL.attributes.ATTRIBUTE.MESSAGE</tt>, if it's not there, it's looked up in <tt>models.MODEL.MESSAGE</tt> and if that is not there also, it returns the translation of the default message (e.g. <tt>activemodel.errors.messages.MESSAGE</tt>). The translated model name, translated attribute name and the value are available for interpolation.
- !ruby/struct:SM::Flow::P 
  body: "When using inheritance in your models, it will check all the inherited models too, but only if the model itself hasn't been found. Say you have <tt>class Admin &lt; User; end</tt> and you wanted the translation for the <tt>:blank</tt> error <tt>message</tt> for the <tt>title</tt> <tt>attribute</tt>, it looks for these translations:"
- !ruby/struct:SM::Flow::P 
  body: "&lt;ol&gt; &lt;li&gt;<tt>activemodel.errors.models.admin.attributes.title.blank</tt>&lt;/li&gt; &lt;li&gt;<tt>activemodel.errors.models.admin.blank</tt>&lt;/li&gt; &lt;li&gt;<tt>activemodel.errors.models.user.attributes.title.blank</tt>&lt;/li&gt; &lt;li&gt;<tt>activemodel.errors.models.user.blank</tt>&lt;/li&gt; &lt;li&gt;any default you provided through the <tt>options</tt> hash (in the activemodel.errors scope)&lt;/li&gt; &lt;li&gt;<tt>activemodel.errors.messages.blank</tt>&lt;/li&gt; &lt;li&gt;<tt>errors.attributes.title.blank</tt>&lt;/li&gt; &lt;li&gt;<tt>errors.messages.blank</tt>&lt;/li&gt; &lt;/ol&gt;"
full_name: ActiveModel::Errors#generate_message
is_singleton: false
name: generate_message
params: (attribute, type = :invalid, options = {})
visibility: public
