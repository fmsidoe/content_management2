--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Formats a <tt>number</tt> as a percentage string (e.g., 65%). You can customize the format in the <tt>options</tt> hash.
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Options
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:locale</tt> - Sets the locale to be used for formatting (defaults to current locale).
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:precision</tt> - Sets the precision of the number (defaults to 3).
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: "<tt>:significant</tt> - If <tt>true</tt>, precision will be the # of significant_digits. If <tt>false</tt>, the # of fractional digits (defaults to <tt>false</tt>)"
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:separator</tt> - Sets the separator between the fractional and integer digits (defaults to &quot;.&quot;).
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:delimiter</tt> - Sets the thousands delimiter (defaults to &quot;&quot;).
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:strip_insignificant_zeros</tt> - If <tt>true</tt> removes insignificant zeros after the decimal separator (defaults to <tt>false</tt>)
  type: :BULLET
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Examples
- !ruby/struct:SM::Flow::VERB 
  body: " number_to_percentage(100)                                        # =&gt; 100.000%\n number_to_percentage(100, :precision =&gt; 0)                       # =&gt; 100%\n number_to_percentage(1000, :delimiter =&gt; '.', :separator =&gt; ',') # =&gt; 1.000,000%\n number_to_percentage(302.24398923423, :precision =&gt; 5)           # =&gt; 302.24399%\n number_to_percentage(1000, :locale =&gt; :fr)                       # =&gt; 1 000,000%\n"
full_name: ActionView::Helpers::NumberHelper#number_to_percentage
is_singleton: false
name: number_to_percentage
params: (number, options = {})
visibility: public
