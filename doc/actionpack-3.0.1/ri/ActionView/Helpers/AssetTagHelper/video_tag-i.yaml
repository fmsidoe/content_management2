--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Returns an html video tag for the <tt>sources</tt>. If <tt>sources</tt> is a string, a single video tag will be returned. If <tt>sources</tt> is an array, a video tag with nested source tags for each source will be returned. The <tt>sources</tt> can be full paths or files that exists in your public videos directory.
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Options
- !ruby/struct:SM::Flow::P 
  body: "You can add HTML attributes using the <tt>options</tt>. The <tt>options</tt> supports two additional keys for convenience and conformance:"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:poster</tt> - Set an image (like a screenshot) to be shown before the video loads. The path is calculated like the <tt>src</tt> of <tt>image_tag</tt>.
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:size</tt> - Supplied as &quot;{Width}x{Height}&quot;, so &quot;30x45&quot; becomes width=&quot;30&quot; and height=&quot;45&quot;. <tt>:size</tt> will be ignored if the value is not in the correct format.
  type: :BULLET
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Examples
- !ruby/struct:SM::Flow::VERB 
  body: " video_tag(&quot;trailer&quot;)  # =&gt;\n   &lt;video src=&quot;/videos/trailer&quot; /&gt;\n video_tag(&quot;trailer.ogg&quot;)  # =&gt;\n   &lt;video src=&quot;/videos/trailer.ogg&quot; /&gt;\n video_tag(&quot;trailer.ogg&quot;, :controls =&gt; true, :autobuffer =&gt; true)  # =&gt;\n   &lt;video autobuffer=&quot;autobuffer&quot; controls=&quot;controls&quot; src=&quot;/videos/trailer.ogg&quot; /&gt;\n video_tag(&quot;trailer.m4v&quot;, :size =&gt; &quot;16x10&quot;, :poster =&gt; &quot;screenshot.png&quot;)  # =&gt;\n   &lt;video src=&quot;/videos/trailer.m4v&quot; width=&quot;16&quot; height=&quot;10&quot; poster=&quot;/images/screenshot.png&quot; /&gt;\n video_tag(&quot;/trailers/hd.avi&quot;, :size =&gt; &quot;16x16&quot;)  # =&gt;\n   &lt;video src=&quot;/trailers/hd.avi&quot; width=&quot;16&quot; height=&quot;16&quot; /&gt;\n video_tag(&quot;/trailers/hd.avi&quot;, :height =&gt; '32', :width =&gt; '32') # =&gt;\n   &lt;video height=&quot;32&quot; src=&quot;/trailers/hd.avi&quot; width=&quot;32&quot; /&gt;\n video_tag([&quot;trailer.ogg&quot;, &quot;trailer.flv&quot;]) # =&gt;\n   &lt;video&gt;&lt;source src=&quot;trailer.ogg&quot; /&gt;&lt;source src=&quot;trailer.ogg&quot; /&gt;&lt;source src=&quot;trailer.flv&quot; /&gt;&lt;/video&gt;\n video_tag([&quot;trailer.ogg&quot;, &quot;trailer.flv&quot;] :size =&gt; &quot;160x120&quot;) # =&gt;\n   &lt;video height=&quot;120&quot; width=&quot;160&quot;&gt;&lt;source src=&quot;trailer.ogg&quot; /&gt;&lt;source src=&quot;trailer.flv&quot; /&gt;&lt;/video&gt;\n"
full_name: ActionView::Helpers::AssetTagHelper#video_tag
is_singleton: false
name: video_tag
params: (sources, options = {})
visibility: public
