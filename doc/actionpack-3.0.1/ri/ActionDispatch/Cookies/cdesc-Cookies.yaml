--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::P 
  body: \Cookies are read and written through ActionController#cookies.
- !ruby/struct:SM::Flow::P 
  body: The cookies being read are the ones received along with the request, the cookies being written will be sent out with the response. Reading a cookie does not get the cookie object itself back, just the value it holds.
- !ruby/struct:SM::Flow::P 
  body: "Examples for writing:"
- !ruby/struct:SM::Flow::VERB 
  body: "  # Sets a simple session cookie.\n  cookies[:user_name] = &quot;david&quot;\n\n  # Sets a cookie that expires in 1 hour.\n  cookies[:login] = { :value =&gt; &quot;XJ-122&quot;, :expires =&gt; 1.hour.from_now }\n\n  # Sets a signed cookie, which prevents a user from tampering with its value.\n  # You must specify a value in ActionController::Base.cookie_verifier_secret.\n  cookies.signed[:remember_me] = [current_user.id, current_user.salt]\n\n  # Sets a &quot;permanent&quot; cookie (which expires in 20 years from now).\n  cookies.permanent[:login] = &quot;XJ-122&quot;\n  # You can also chain these methods:\n  cookies.permanent.signed[:login] = &quot;XJ-122&quot;\n"
- !ruby/struct:SM::Flow::P 
  body: "Examples for reading:"
- !ruby/struct:SM::Flow::VERB 
  body: "  cookies[:user_name] # =&gt; &quot;david&quot;\n  cookies.size        # =&gt; 2\n"
- !ruby/struct:SM::Flow::P 
  body: "Example for deleting:"
- !ruby/struct:SM::Flow::VERB 
  body: "  cookies.delete :user_name\n"
- !ruby/struct:SM::Flow::P 
  body: "Please note that if you specify a :domain when setting a cookie, you must also specify the domain when deleting the cookie:"
- !ruby/struct:SM::Flow::VERB 
  body: " cookies[:key] = {\n   :value =&gt; 'a yummy cookie',\n   :expires =&gt; 1.year.from_now,\n   :domain =&gt; 'domain.com'\n }\n\n cookies.delete(:key, :domain =&gt; 'domain.com')\n"
- !ruby/struct:SM::Flow::P 
  body: "The option symbols for setting cookies are:"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:value</tt> - The cookie's value or list of values (as an array).
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:path</tt> - The path for which this cookie applies. Defaults to the root of the application.
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:domain</tt> - The domain for which this cookie applies so you can restrict to the domain level. If you use a schema like www.example.com and want to share session with user.example.com set <tt>:domain</tt> to <tt>:all</tt>. Make sure to specify the <tt>:domain</tt> option with <tt>:all</tt> again when deleting keys.
  - !ruby/struct:SM::Flow::VERB 
    body: "  :domain =&gt; nil  # Does not sets cookie domain. (default)\n  :domain =&gt; :all # Allow the cookie for the top most level\n                    domain and subdomains.\n"
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:expires</tt> - The time at which this cookie expires, as a \Time object.
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:secure</tt> - Whether this cookie is a only transmitted to HTTPS servers. Default is <tt>false</tt>.
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:httponly</tt> - Whether this cookie is accessible via scripting or only HTTP. Defaults to <tt>false</tt>.
  type: :BULLET
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: HTTP_HEADER
  value: "\"Set-Cookie\".freeze"
- !ruby/object:RI::Constant 
  comment: 
  name: TOKEN_KEY
  value: "\"action_dispatch.secret_token\".freeze"
full_name: ActionDispatch::Cookies
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: call
name: Cookies
superclass: Object
