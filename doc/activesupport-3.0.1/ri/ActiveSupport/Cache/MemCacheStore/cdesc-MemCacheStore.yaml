--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
- !ruby/object:RI::MethodSummary 
  name: build_mem_cache
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::P 
  body: "A cache store implementation which stores data in Memcached: http://www.danga.com/memcached/"
- !ruby/struct:SM::Flow::P 
  body: This is currently the most popular cache store for production websites.
- !ruby/struct:SM::Flow::P 
  body: "Special features:"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "-"
    body: Clustering and load balancing. One can specify multiple memcached servers, and MemCacheStore will load balance between all available servers. If a server goes down, then MemCacheStore will ignore it until it comes back up.
  type: :BULLET
- !ruby/struct:SM::Flow::P 
  body: MemCacheStore implements the Strategy::LocalCache strategy which implements an in memory cache inside of a block.
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: ESCAPE_KEY_CHARS
  value: /[\x00-\x20%\x7F-\xFF]/
full_name: ActiveSupport::Cache::MemCacheStore
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: clear
- !ruby/object:RI::MethodSummary 
  name: read_multi
- !ruby/object:RI::MethodSummary 
  name: stats
name: MemCacheStore
superclass: Store
