--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Overwrites the Base backend translate method so that it will check the translation meta data space (:i18n) for a locale specific pluralization rule and use it to pluralize the given entry. I.e. the library expects pluralization rules to be stored at I18n.t(:'i18n.plural.rule')
- !ruby/struct:SM::Flow::P 
  body: "Pluralization rules are expected to respond to #call(entry, count) and return a pluralization key. Valid keys depend on the translation data hash (entry) but it is generally recommended to follow CLDR's style, i.e., return one of the keys :zero, :one, :few, :many, :other."
- !ruby/struct:SM::Flow::P 
  body: The :zero key is always picked directly when count equals 0 AND the translation data has the key :zero. This way translators are free to either pick a special :zero translation even for languages where the pluralizer does not return a :zero key.
full_name: I18n::Backend::Pluralization#pluralize
is_singleton: false
name: pluralize
params: (locale, entry, count)
visibility: public
