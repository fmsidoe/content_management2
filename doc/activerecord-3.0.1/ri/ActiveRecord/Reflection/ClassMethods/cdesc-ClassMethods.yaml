--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: Reflection enables to interrogate Active Record classes and objects about their associations and aggregations. This information can, for example, be used in a form builder that takes an Active Record object and creates input fields for all of the attributes depending on their type and displays the associations to other objects.
- !ruby/struct:SM::Flow::P 
  body: MacroReflection class has info for AggregateReflection and AssociationReflection classes.
constants: []

full_name: ActiveRecord::Reflection::ClassMethods
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: create_reflection
- !ruby/object:RI::MethodSummary 
  name: reflect_on_aggregation
- !ruby/object:RI::MethodSummary 
  name: reflect_on_all_aggregations
- !ruby/object:RI::MethodSummary 
  name: reflect_on_all_associations
- !ruby/object:RI::MethodSummary 
  name: reflect_on_all_autosave_associations
- !ruby/object:RI::MethodSummary 
  name: reflect_on_association
- !ruby/object:RI::MethodSummary 
  name: reflections
name: ClassMethods
superclass: 
